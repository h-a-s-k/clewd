/*
* https://gitgud.io/ahsk/clewd
* https://github.com/h-a-s-k/clewd
*/const{spawn:R,exec:I}=require("node:child_process"),{EventEmitter:k}=require("node:events"),A=require("ws"),{randomUUID:D}=require("node:crypto"),{relative:L,join:P,parse:E,resolve:T}=require("node:path"),{version:H}=require("./package.json");class q extends k{constructor(e){super();this.version=H;this.role=e?.role||"server";this.port=e?.port||8443;this.host=e?.host||"localhost"}ws=void 0;process=void 0;port=void 0;host=void 0;requests={};binaries={win32:{x64:"clewd-superfetch-win-amd64.exe",ia32:"clewd-superfetch-win-ia32.exe"},darwin:{x64:"clewd-superfetch-mac-amd64",arm64:"clewd-superfetch-mac-arm64"},freebsd:{x64:"clewd-superfetch-freebsd-amd64",ia32:"clewd-superfetch-freebsd-ia32"},android:{arm64:"clewd-superfetch-android-arm64",arm:"clewd-superfetch-android-arm"},linux:{arm64:"clewd-superfetch-linux-arm64",arm:"clewd-superfetch-linux-arm",x64:"clewd-superfetch-linux-amd64",ia32:"clewd-superfetch-linux-ia32"}};get binary(){const e="win32"===process.platform;return`${e?'"':""}${T(__dirname,"./bin/"+this.binaries[process.platform][process.arch])}${e?'"':""}`}init(){return new Promise(((e,s)=>{this.cleanProcs(true,(()=>{this.spawnGo((()=>{this.connectWS((()=>{e()}))}))}));this.once("error",(e=>{s(e)}))}))}findRequest(e){return this.requests[e]}modifyRequest(e,s,t){this.requests[e]||(this.requests[e]={});this.requests[e][t]=s}deleteRequest(e){delete this.requests[e]}connectWS(e){this.ws=new A(`ws://${this.host}:${this.port}`);this.ws.on("message",(e=>{const s=JSON.parse(e.toString()),t=["Body","Headers","RequestID","Status"];Object.keys(s).every((e=>t.includes(e)));this.modifyRequest(s.RequestID,{body:s.Body,headers:s.Headers,requestId:s.RequestID,status:s.Status},"response");this.emit(s.RequestID,this.findRequest(s.RequestID))}));this.ws.on("connection",(()=>{}));this.ws.on("error",(e=>{console.warn("superfetch [[31merr[0m] %o",e)}));this.ws.on("open",(()=>{e&&e()}));this.ws.on("connection",(()=>{}))}async request(e){const s=["url","ja3","userAgent"].find((s=>!(s in e)));if(!e||s)throw Error(`Option ${s} is missing`);if(!e.ja3||!e.userAgent)throw Error("Options ja3 or userAgent are missing");"string"!=typeof e.body&&(e.body=JSON.stringify(e.body));e={url:e.url,method:e.method?.toLowerCase()||"get",headers:e.headers||{},Cookies:e.cookies||[{}],body:e.body||"",ja3:e.ja3,userAgent:e.userAgent,proxy:e.proxy||null,timeout:e.timeout||120,disableRedirect:e.disableRedirect||true,headerOrder:e.headerOrder||[]};const t=D();this.modifyRequest(t,{requestId:t,options:e},"request");this.ws.send(JSON.stringify(this.findRequest(t).request));const r=await this.awaitRequest(t);this.deleteRequest(t);return r}awaitRequest(e){return new Promise((s=>{this.on(e,(t=>{s(t);this.removeAllListeners(e)}))}))}spawnGo(e){console.log("superfetch [[2mload[0m] "+L(P(__dirname,"../../"),T(__dirname,this.binary.replace(/"/g,""))));this.process=R(this.binary,{env:{WS_HOST:this.host,WS_PORT:this.port},shell:true,windowsHide:true,killSignal:"SIGKILL",detached:"win32"!==process.platform});this.process.stderr.on("data",(e=>{if(e.toString().includes("Request_Id_On_The_Left")){const s=e.toString().split("Request_Id_On_The_Left"),[t,r]=s;console.warn("superfetch [[31merr[0m]",r)}else console.warn("superfetch [[31merr[0m]",e.toString())}));this.process.on("error",(e=>{this.emit("error",Error(e))}));this.process.on("spawn",(()=>{console.log(`superfetch v${this.version} [[32mspawn[0m]\n`);e&&setTimeout(e,1200)}))}cleanProcs(e=false,s){let t="win32"===process.platform?"taskkill /F /IM":"killall";const r=E(this.binary),i=`${r.name}${r.ext}`;I(`${t} ${i}`,(()=>{s&&s()}))}exit(e){this.ws?.terminate();this.cleanProcs(false,e)}}module.exports=q;